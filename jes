<!DOCTYPE html>

<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Jesenska y Felipe - Portfolio Futurista</title>
    <style>
        /* ============================================
           VARIABLES CSS Y RESET
           ============================================ */
        :root {
            --bg-primary: #0a0e27;
            --bg-secondary: #1a1f3a;
            --text-primary: #ffffff;
            --text-secondary: #a0aec0;
            --accent-primary: #00d9ff;
            --accent-secondary: #ff006e;
            --gradient-1: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            --gradient-2: linear-gradient(135deg, #00d9ff 0%, #0099ff 100%);
            --shadow-glow: 0 0 20px rgba(0, 217, 255, 0.3);
            --transition-smooth: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        }

```
    [data-theme="light"] {
        --bg-primary: #f7fafc;
        --bg-secondary: #ffffff;
        --text-primary: #1a202c;
        --text-secondary: #4a5568;
        --accent-primary: #0099ff;
        --accent-secondary: #d946ef;
    }

    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background: var(--bg-primary);
        color: var(--text-primary);
        line-height: 1.6;
        overflow-x: hidden;
        transition: var(--transition-smooth);
    }

    /* ============================================
       CANVAS DE PARTÍCULAS (FONDO)
       ============================================ */
    #particles-canvas {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 0;
        opacity: 0.6;
    }

    /* ============================================
       HEADER Y NAVEGACIÓN
       ============================================ */
    header {
        position: fixed;
        top: 0;
        width: 100%;
        background: rgba(10, 14, 39, 0.9);
        backdrop-filter: blur(10px);
        z-index: 100;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
        transition: var(--transition-smooth);
    }

    [data-theme="light"] header {
        background: rgba(247, 250, 252, 0.9);
    }

    nav {
        max-width: 1200px;
        margin: 0 auto;
        padding: 1rem 2rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .logo {
        font-size: 1.5rem;
        font-weight: bold;
        background: var(--gradient-2);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        letter-spacing: 2px;
    }

    .nav-links {
        display: flex;
        gap: 2rem;
        list-style: none;
    }

    .nav-links a {
        color: var(--text-primary);
        text-decoration: none;
        transition: var(--transition-smooth);
        position: relative;
    }

    .nav-links a::after {
        content: '';
        position: absolute;
        bottom: -5px;
        left: 0;
        width: 0;
        height: 2px;
        background: var(--accent-primary);
        transition: var(--transition-smooth);
    }

    .nav-links a:hover::after {
        width: 100%;
    }

    .theme-toggle {
        background: var(--gradient-2);
        border: none;
        width: 50px;
        height: 50px;
        border-radius: 50%;
        cursor: pointer;
        transition: var(--transition-smooth);
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.5rem;
    }

    .theme-toggle:hover {
        transform: rotate(180deg) scale(1.1);
        box-shadow: var(--shadow-glow);
    }

    /* ============================================
       SECCIÓN HERO
       ============================================ */
    .hero {
        position: relative;
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        text-align: center;
        padding: 0 2rem;
        margin-top: 80px;
    }

    .hero-content {
        position: relative;
        z-index: 10;
        animation: fadeInUp 1s ease-out;
    }

    .hero h1 {
        font-size: clamp(2.5rem, 8vw, 5rem);
        margin-bottom: 1rem;
        background: var(--gradient-1);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        animation: glow 2s ease-in-out infinite alternate;
    }

    .hero p {
        font-size: clamp(1rem, 3vw, 1.5rem);
        color: var(--text-secondary);
        margin-bottom: 2rem;
    }

    .cta-button {
        display: inline-block;
        padding: 1rem 2.5rem;
        background: var(--gradient-2);
        color: white;
        text-decoration: none;
        border-radius: 50px;
        font-weight: bold;
        transition: var(--transition-smooth);
        box-shadow: 0 4px 15px rgba(0, 217, 255, 0.4);
    }

    .cta-button:hover {
        transform: translateY(-3px);
        box-shadow: 0 8px 25px rgba(0, 217, 255, 0.6);
    }

    /* ============================================
       TARJETAS 3D INTERACTIVAS
       ============================================ */
    .cards-section {
        position: relative;
        z-index: 10;
        max-width: 1200px;
        margin: 4rem auto;
        padding: 2rem;
    }

    .cards-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 2rem;
    }

    .card-3d {
        background: var(--bg-secondary);
        border-radius: 20px;
        padding: 2rem;
        position: relative;
        transform-style: preserve-3d;
        transition: var(--transition-smooth);
        cursor: pointer;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
    }

    .card-3d::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: var(--gradient-1);
        border-radius: 20px;
        opacity: 0;
        transition: var(--transition-smooth);
        z-index: -1;
    }

    .card-3d:hover {
        transform: translateY(-10px) rotateX(5deg);
        box-shadow: var(--shadow-glow);
    }

    .card-3d:hover::before {
        opacity: 0.1;
    }

    .card-icon {
        font-size: 3rem;
        margin-bottom: 1rem;
    }

    .card-3d h3 {
        font-size: 1.5rem;
        margin-bottom: 0.5rem;
        color: var(--accent-primary);
    }

    /* ============================================
       FORMULARIO DE CONTACTO
       ============================================ */
    .contact-section {
        position: relative;
        z-index: 10;
        max-width: 600px;
        margin: 4rem auto;
        padding: 2rem;
        background: var(--bg-secondary);
        border-radius: 20px;
        box-shadow: 0 10px 40px rgba(0, 0, 0, 0.4);
    }

    .contact-section h2 {
        text-align: center;
        margin-bottom: 2rem;
        background: var(--gradient-2);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .form-group label {
        display: block;
        margin-bottom: 0.5rem;
        color: var(--text-secondary);
    }

    .form-group input,
    .form-group textarea {
        width: 100%;
        padding: 0.75rem;
        background: var(--bg-primary);
        border: 2px solid transparent;
        border-radius: 10px;
        color: var(--text-primary);
        font-size: 1rem;
        transition: var(--transition-smooth);
    }

    .form-group input:focus,
    .form-group textarea:focus {
        outline: none;
        border-color: var(--accent-primary);
        box-shadow: 0 0 10px rgba(0, 217, 255, 0.3);
    }

    .form-group.error input,
    .form-group.error textarea {
        border-color: var(--accent-secondary);
    }

    .error-message {
        color: var(--accent-secondary);
        font-size: 0.875rem;
        margin-top: 0.25rem;
        display: none;
    }

    .form-group.error .error-message {
        display: block;
    }

    .submit-btn {
        width: 100%;
        padding: 1rem;
        background: var(--gradient-2);
        border: none;
        border-radius: 10px;
        color: white;
        font-size: 1.1rem;
        font-weight: bold;
        cursor: pointer;
        transition: var(--transition-smooth);
    }

    .submit-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 20px rgba(0, 217, 255, 0.5);
    }

    /* ============================================
       MODAL
       ============================================ */
    .modal {
        display: none;
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.8);
        backdrop-filter: blur(5px);
    }

    .modal.active {
        display: flex;
        align-items: center;
        justify-content: center;
        animation: fadeIn 0.3s ease-out;
    }

    .modal-content {
        background: var(--bg-secondary);
        padding: 2rem;
        border-radius: 20px;
        max-width: 500px;
        width: 90%;
        position: relative;
        animation: slideUp 0.3s ease-out;
        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.5);
    }

    .close-modal {
        position: absolute;
        top: 1rem;
        right: 1rem;
        font-size: 2rem;
        cursor: pointer;
        color: var(--text-secondary);
        transition: var(--transition-smooth);
    }

    .close-modal:hover {
        color: var(--accent-primary);
        transform: rotate(90deg);
    }

    /* ============================================
       MINI-JUEGO (Contador de Clics)
       ============================================ */
    .game-section {
        position: relative;
        z-index: 10;
        max-width: 600px;
        margin: 4rem auto;
        padding: 2rem;
        background: var(--bg-secondary);
        border-radius: 20px;
        text-align: center;
        box-shadow: 0 10px 40px rgba(0, 0, 0, 0.4);
    }

    .game-section h2 {
        margin-bottom: 1.5rem;
        background: var(--gradient-1);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    .game-circle {
        width: 200px;
        height: 200px;
        margin: 2rem auto;
        background: var(--gradient-2);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 3rem;
        font-weight: bold;
        cursor: pointer;
        transition: var(--transition-smooth);
        box-shadow: var(--shadow-glow);
    }

    .game-circle:hover {
        transform: scale(1.1);
    }

    .game-circle:active {
        transform: scale(0.95);
    }

    .game-score {
        font-size: 1.5rem;
        margin-top: 1rem;
        color: var(--text-secondary);
    }

    /* ============================================
       FOOTER
       ============================================ */
    footer {
        position: relative;
        z-index: 10;
        text-align: center;
        padding: 2rem;
        background: var(--bg-secondary);
        margin-top: 4rem;
    }

    /* ============================================
       ANIMACIONES
       ============================================ */
    @keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @keyframes fadeIn {
        from { opacity: 0; }
        to { opacity: 1; }
    }

    @keyframes slideUp {
        from {
            transform: translateY(50px);
            opacity: 0;
        }
        to {
            transform: translateY(0);
            opacity: 1;
        }
    }

    @keyframes glow {
        from {
            filter: drop-shadow(0 0 5px rgba(102, 126, 234, 0.5));
        }
        to {
            filter: drop-shadow(0 0 20px rgba(102, 126, 234, 0.8));
        }
    }

    /* ============================================
       RESPONSIVE
       ============================================ */
    @media (max-width: 768px) {
        .nav-links {
            gap: 1rem;
            font-size: 0.9rem;
        }

        .cards-grid {
            grid-template-columns: 1fr;
        }
    }
</style>
```

</head>
<body>
    <!-- Canvas para partículas de fondo -->
    <canvas id="particles-canvas"></canvas>

```
<!-- Header con navegación -->
<header>
    <nav>
        <div class="logo">JESENSKA Y FELIPE</div>
        <ul class="nav-links">
            <li><a href="#inicio">Inicio</a></li>
            <li><a href="#proyectos">Proyectos</a></li>
            <li><a href="#contacto">Contacto</a></li>
            <li><a href="#juego">Juego</a></li>
        </ul>
        <button class="theme-toggle" id="theme-toggle" aria-label="Cambiar tema">🌙</button>
    </nav>
</header>

<!-- Sección Hero -->
<section class="hero" id="inicio">
    <div class="hero-content">
        <h1>Jesenska y Felipe</h1>
        <p>Experiencias digitales futuristas e interactivas</p>
        <a href="#contacto" class="cta-button">Conectar</a>
    </div>
</section>

<!-- Tarjetas 3D Interactivas -->
<section class="cards-section" id="proyectos">
    <div class="cards-grid">
        <div class="card-3d">
            <div class="card-icon">🚀</div>
            <h3>Innovación</h3>
            <p>Diseños que rompen barreras y exploran nuevas fronteras digitales.</p>
        </div>
        <div class="card-3d">
            <div class="card-icon">💎</div>
            <h3>Excelencia</h3>
            <p>Cada detalle cuenta. Perfección en cada pixel y línea de código.</p>
        </div>
        <div class="card-3d">
            <div class="card-icon">⚡</div>
            <h3>Velocidad</h3>
            <p>Rendimiento optimizado para experiencias instantáneas y fluidas.</p>
        </div>
    </div>
</section>

<!-- Formulario de Contacto -->
<section class="contact-section" id="contacto">
    <h2>Contacto</h2>
    <form id="contact-form">
        <div class="form-group">
            <label for="name">Nombre</label>
            <input type="text" id="name" name="name" required>
            <span class="error-message">Por favor ingresa tu nombre</span>
        </div>
        <div class="form-group">
            <label for="email">Email</label>
            <input type="email" id="email" name="email" required>
            <span class="error-message">Por favor ingresa un email válido</span>
        </div>
        <div class="form-group">
            <label for="message">Mensaje</label>
            <textarea id="message" name="message" rows="5" required></textarea>
            <span class="error-message">El mensaje debe tener al menos 10 caracteres</span>
        </div>
        <button type="submit" class="submit-btn">Enviar Mensaje</button>
    </form>
</section>

<!-- Mini-Juego -->
<section class="game-section" id="juego">
    <h2>Mini-Juego: Click Challenge</h2>
    <p>¿Cuántas veces puedes hacer clic en 10 segundos?</p>
    <div class="game-circle" id="game-circle">¡CLICK!</div>
    <div class="game-score">Puntos: <span id="score">0</span></div>
    <div class="game-score">Mejor: <span id="high-score">0</span></div>
</section>

<!-- Modal -->
<div class="modal" id="success-modal">
    <div class="modal-content">
        <span class="close-modal" id="close-modal">&times;</span>
        <h2>✅ ¡Mensaje Enviado!</h2>
        <p>Gracias por contactarnos. Te responderemos pronto.</p>
    </div>
</div>

<!-- Footer -->
<footer>
    <p>&copy; 2025 Jesenska y Felipe. Todos los derechos reservados.</p>
    <p>Diseñado con 💜 y tecnología futurista</p>
</footer>

<script>
    // ============================================
    // SISTEMA DE PARTÍCULAS EN CANVAS
    // ============================================
    const canvas = document.getElementById('particles-canvas');
    const ctx = canvas.getContext('2d');
    
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;

    const particles = [];
    const particleCount = 100;

    class Particle {
        constructor() {
            this.x = Math.random() * canvas.width;
            this.y = Math.random() * canvas.height;
            this.size = Math.random() * 3 + 1;
            this.speedX = Math.random() * 2 - 1;
            this.speedY = Math.random() * 2 - 1;
            this.opacity = Math.random() * 0.5 + 0.3;
        }

        update() {
            this.x += this.speedX;
            this.y += this.speedY;

            if (this.x > canvas.width || this.x < 0) this.speedX *= -1;
            if (this.y > canvas.height || this.y < 0) this.speedY *= -1;
        }

        draw() {
            ctx.fillStyle = `rgba(0, 217, 255, ${this.opacity})`;
            ctx.beginPath();
            ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);
            ctx.fill();
        }
    }

    // Crear partículas
    for (let i = 0; i < particleCount; i++) {
        particles.push(new Particle());
    }

    // Animar partículas
    function animateParticles() {
        ctx.clearRect(0, 0, canvas.width, canvas.height);
        
        particles.forEach(particle => {
            particle.update();
            particle.draw();
        });

        // Conectar partículas cercanas
        particles.forEach((p1, i) => {
            particles.slice(i + 1).forEach(p2 => {
                const dx = p1.x - p2.x;
                const dy = p1.y - p2.y;
                const distance = Math.sqrt(dx * dx + dy * dy);

                if (distance < 100) {
                    ctx.strokeStyle = `rgba(0, 217, 255, ${0.2 * (1 - distance / 100)})`;
                    ctx.lineWidth = 1;
                    ctx.beginPath();
                    ctx.moveTo(p1.x, p1.y);
                    ctx.lineTo(p2.x, p2.y);
                    ctx.stroke();
                }
            });
        });

        requestAnimationFrame(animateParticles);
    }

    animateParticles();

    // Redimensionar canvas
    window.addEventListener('resize', () => {
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;
    });

    // ============================================
    // CAMBIO DE TEMA (MODO OSCURO/CLARO)
    // ============================================
    const themeToggle = document.getElementById('theme-toggle');
    const body = document.body;

    themeToggle.addEventListener('click', () => {
        if (body.getAttribute('data-theme') === 'light') {
            body.removeAttribute('data-theme');
            themeToggle.textContent = '🌙';
        } else {
            body.setAttribute('data-theme', 'light');
            themeToggle.textContent = '☀️';
        }
    });

    // ============================================
    // VALIDACIÓN DE FORMULARIO
    // ============================================
    const contactForm = document.getElementById('contact-form');
    const modal = document.getElementById('success-modal');
    const closeModal = document.getElementById('close-modal');

    contactForm.addEventListener('submit', (e) => {
        e.preventDefault();
        
        let isValid = true;
        const formGroups = contactForm.querySelectorAll('.form-group');

        formGroups.forEach(group => {
            const input = group.querySelector('input, textarea');
            group.classList.remove('error');

            if (input.type === 'email') {
                const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                if (!emailRegex.test(input.value)) {
                    group.classList.add('error');
                    isValid = false;
                }
            } else if (input.tagName === 'TEXTAREA') {
                if (input.value.trim().length < 10) {
                    group.classList.add('error');
                    isValid = false;
                }
            } else if (!input.value.trim()) {
                group.classList.add('error');
                isValid = false;
            }
        });

        if (isValid) {
            modal.classList.add('active');
            contactForm.reset();
        }
    });

    closeModal.addEventListener('click', () => {
        modal.classList.remove('active');
    });

    modal.addEventListener('click', (e) => {
        if (e.target === modal) {
            modal.classList.remove('active');
        }
    });

    // ============================================
    // MINI-JUEGO: CLICK CHALLENGE
    // ============================================
    const gameCircle = document.getElementById('game-circle');
    const scoreDisplay = document.getElementById('score');
    const highScoreDisplay = document.getElementById('high-score');

    let score = 0;
    let highScore = localStorage.getItem('highScore') || 0;
    let gameActive = false;
    let gameTimer;

    highScoreDisplay.textContent = highScore;

    gameCircle.addEventListener('click', () => {
        if (!gameActive) {
            startGame();
        }
        
        score++;
        scoreDisplay.textContent = score;
        
        // Efecto visual al hacer clic
        gameCircle.style.transform = 'scale(0.9)';
        setTimeout(() => {
            gameCircle.style.transform = 'scale(1)';
        }, 100);
    });

    function startGame() {
        gameActive = true;
        score = 0;
        scoreDisplay.textContent = score;
        gameCircle.textContent = '¡GO!';

        let timeLeft = 10;
        gameTimer = setInterval(() => {
            timeLeft--;
            gameCircle.textContent = timeLeft;
            
            if (timeLeft === 0) {
                endGame();
            }
        }, 1000);
    }

    function endGame() {
        clearInterval(gameTimer);
        gameActive = false;
        gameCircle.textContent = '¡CLICK!';

        if (score > highScore) {
            highScore = score;
            highScoreDisplay.textContent = highScore;
            localStorage.setItem('highScore', highScore);
            alert(`¡Nuevo récord! 🎉 Puntuación: ${score}`);
        } else {
            alert(`Juego terminado. Puntuación: ${score}`);
        }
    }

    // ============================================
    // EFECTO 3D EN TARJETAS CON MOUSE
    // ============================================
    const cards = document.querySelectorAll('.card-3d');

    cards.forEach(card => {
        card.addEventListener('mousemove', (e) => {
            const rect = card.getBoundingClientRect();
            const x = e.clientX - rect.left;
            const y = e.clientY - rect.top;

            const centerX = rect.width / 2;
            const centerY = rect.height / 2;

            const rotateX = (y - centerY) / 10;
            const rotateY = (centerX - x) / 10;

            card.style.transform = `perspective(1000px) rotateX(${rotateX}deg) rotateY(${rotateY}deg) translateY(-10px)`;
        });

        card.addEventListener('mouseleave', () => {
            card.style.transform = 'perspective(1000px) rotateX(0) rotateY(0) translateY(0)';
        });
    });

    // ============================================
    // SMOOTH SCROLL PARA NAVEGACIÓN
    // ============================================
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
            e.preventDefault();
            const target = document.querySelector(this.getAttribute('href'));
            if (target) {
                target.scrollIntoView({
                    behavior: 'smooth',
                    block: 'start'
                });
            }
        });
    });
</script>
```

</body>
</html>